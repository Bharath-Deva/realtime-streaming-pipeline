x-spark-common: &spark-common
  image: bitnami/spark:3.5.0
  volumes:
    - ./jobs:/opt/bitnami/spark/jobs
    - ./mnt/checkpoints:/mnt/spark-checkpoints
    - ./mnt/spark-state:/mnt/spark-state
  networks:
    - realtimePipeline

services:
  kafka-controller-1:
    image: apache/kafka:3.8.1
    container_name: kafka-controller-1
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_JMX_OPTS: >
        -javaagent:/etc/jmx/jmx_prometheus_javaagent.jar=9300:/etc/jmx/kafka-broker.yml
    networks:
      - realtimePipeline
    volumes:
      - controller_data_1:/var/lib/kafka/data
      - ./jmx:/etc/jmx

  kafka-controller-2:
    image: apache/kafka:3.8.1
    container_name: kafka-controller-2
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_JMX_OPTS: >
        -javaagent:/etc/jmx/jmx_prometheus_javaagent.jar=9300:/etc/jmx/kafka-broker.yml
    networks:
      - realtimePipeline
    volumes:
      - controller_data_2:/var/lib/kafka/data
      - ./jmx:/etc/jmx

  kafka-controller-3:
    image: apache/kafka:3.8.1
    container_name: kafka-controller-3
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_JMX_OPTS: >
        -javaagent:/etc/jmx/jmx_prometheus_javaagent.jar=9300:/etc/jmx/kafka-broker.yml
    networks:
      - realtimePipeline
    volumes:
      - controller_data_3:/var/lib/kafka/data
      - ./jmx:/etc/jmx

  kafka-broker-1:
    image: apache/kafka:3.8.1
    container_name: kafka-broker-1
    restart: unless-stopped
    ports:
      - "29092:9092"
      - "9930:9300"
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-1:19092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_OPTS: >
        -javaagent:/etc/jmx/jmx_prometheus_javaagent.jar=9300:/etc/jmx/kafka-broker.yml
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3
    volumes:
      - broker_data_1:/var/lib/kafka/data
      - ./jmx:/etc/jmx
    networks:
      - realtimePipeline

  kafka-broker-2:
    image: apache/kafka:3.8.1
    container_name: kafka-broker-2
    restart: unless-stopped
    ports:
      - "39092:9092"
      - "8930:9300"
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-2:19092,PLAINTEXT_HOST://localhost:39092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_OPTS: >
        -javaagent:/etc/jmx/jmx_prometheus_javaagent.jar=9300:/etc/jmx/kafka-broker.yml
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3
    volumes:
      - broker_data_2:/var/lib/kafka/data
      - ./jmx:/etc/jmx
    networks:
      - realtimePipeline

  kafka-broker-3:
    image: apache/kafka:3.8.1
    container_name: kafka-broker-3
    restart: unless-stopped
    ports:
      - "49092:9092"
      - "7930:9300"
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-3:19092,PLAINTEXT_HOST://localhost:49092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_OPTS: >
        -javaagent:/etc/jmx/jmx_prometheus_javaagent.jar=9300:/etc/jmx/kafka-broker.yml
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3
    volumes:
      - broker_data_3:/var/lib/kafka/data
      - ./jmx:/etc/jmx
    networks:
      - realtimePipeline

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.1
    container_name: schema-registry
    ports:
      - "18081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-broker-1:19092,kafka-broker-2:19092,kafka-broker-3:19092
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:18081
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    networks:
      - realtimePipeline

  console:
    image: docker.redpanda.com/redpandadata/console:v2.5.2
    entrypoint: /bin/sh
    command: |-
      -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    ports:
      - "8080:8080"
    depends_on:
      - schema-registry
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: >
        kafka:
          brokers: ["kafka-broker-1:19092", "kafka-broker-2:19092", "kafka-broker-3:19092"] 
          schemaRegistry:
            enabled: true
            urls: ["http://schema-registry:18081"]

        redpanda:
          adminApi:
            enabled: false
            urls: ["http://kafka_broker:9644"]
        connect:
          enabled: false
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
    networks:
      - realtimePipeline

  spark-master:
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9190:8080"
      - "7077:7077"
      - "4040:4040"
      - "8081:8081"
  spark-worker: &spark-worker-image
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2g
      SPARK_MASTER_URL: spark://spark-master:7077

  spark-worker-2:
    <<: *spark-worker-image

  spark-worker-3:
    <<: *spark-worker-image

# Monitoring
  prometheus:
    image: prom/prometheus:v3.0.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    networks:
      - realtimePipeline

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    ports:
      - "59093:9093"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
    depends_on:
      - prometheus
    networks:
      - realtimePipeline

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - realtimePipeline

volumes:
  controller_data_1:
  controller_data_2:
  controller_data_3:
  broker_data_1:
  broker_data_2:
  broker_data_3:
  grafana_data:

networks:
  realtimePipeline: